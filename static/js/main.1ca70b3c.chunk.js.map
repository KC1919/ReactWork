{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","mode","document","body","style","backgroundColor","color","getElementById","className","id","href","title","justifyContent","cursor","type","onClick","toggleState","margin","value","htmlFor","TextForm","useState","text","setText","heading","rows","placeholder","onChange","event","target","disabled","length","newText","toUpperCase","showAlert","toLowerCase","position","right","copiedText","select","navigator","clipboard","writeText","split","join","replaceAll","trim","Alert","height","alert","charAt","slice","msg","defaultProps","App","setAlert","message","alertType","setTimeout","setMode","colour","console","log","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1ca70b3c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  if (props.mode === \"blue\") {\r\n    document.body.style.backgroundColor = \"powderBlue\";\r\n    document.body.style.color = \"black\";\r\n  } else if (props.mode === \"yellow\") {\r\n    document.body.style.backgroundColor = \"#FFFF99\";\r\n    document.body.style.color = \"black\";\r\n  } else if (props.mode === \"green\") {\r\n    document.body.style.backgroundColor = \"#90EE90\";\r\n    document.body.style.color = \"black\";\r\n  } else {\r\n    if (props.mode === \"dark\") {\r\n      document.body.style.backgroundColor = \"black\";\r\n      document.body.style.color = \"white\";\r\n    } else {\r\n      document.getElementById(\"toggleBtn\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      document.body.style.color = \"black\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className={`navbar navbar-expand-lg navbar-dark bg-dark`}>\r\n        <div className=\"container-fluid\" id=\"homeAbout\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n\r\n          <div style={{justifyContent:\"space-between\"}}  className=\"d-flex container-fluid collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\r\n            <div>\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                    Home\r\n                  </a>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                    About\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            \r\n              <div className=\"d-flex\">\r\n\r\n                <div style={{ cursor: \"pointer\" }}>\r\n                  <button\r\n                    id=\"blue\"\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      props.toggleState(\"blue\");\r\n                    }}\r\n                    className=\"btn btn-outline-primary mx-1 my-1\"\r\n                  >\r\n                    Blue\r\n                  </button>\r\n                </div>\r\n\r\n                <div style={{ cursor: \"pointer\" }}>\r\n                  <button\r\n                    id=\"yellow\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-warning mx-1 my-1\"\r\n                    onClick={() => {\r\n                      props.toggleState(\"yellow\");\r\n                    }}\r\n                  >\r\n                    Yellow\r\n                  </button>\r\n                </div>\r\n\r\n                <div style={{ cursor: \"pointer\" }}>\r\n                  <button\r\n                    id=\"green\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-success mx-1 my-1\"\r\n                    onClick={() => {\r\n                      props.toggleState(\"green\");\r\n                    }}\r\n                  >\r\n                    Green\r\n                  </button>\r\n                </div>\r\n\r\n                <div style={{ cursor: \"pointer\" }}>\r\n                  <button\r\n                    style={{ margin: \"0 30px 0 50px\" }}\r\n                    id=\"reset\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-danger my-1\"\r\n                    onClick={() => {\r\n                      props.toggleState(\"reset\");\r\n                    }}\r\n                  >\r\n                    Reset\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-check form-switch\">\r\n                <input\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"toggleBtn\"\r\n                  onClick={() => {\r\n                    props.toggleState(null);\r\n                  }}\r\n                  value=\"NO\"\r\n                />\r\n                <label\r\n                  className=\"form-check-label text-light\"\r\n                  htmlFor=\"flexSwitchCheckDefault\"\r\n                >\r\n                  {props.mode === \"dark\"\r\n                    ? \"Disable Dark Mode\"\r\n                    : \"Enable Dark Mode\"}\r\n                </label>\r\n              </div>\r\n               \r\n            </div>\r\n          </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string.isRequired }; //setting the properties of the props\r\n\r\nNavbar.defaultProps = { title: \"Set Your title here\" }; //if no props will be passed, then it will use the degault values set here\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const [text, setText] = useState(\"\");\r\n  \r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleUpClick = (event) => {\r\n    if (text.length !== 0) {\r\n      let newText = text.toUpperCase();\r\n      setText(newText);\r\n      props.showAlert(\"Text Converted to Upper Case!\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleLowClick = (event) => {\r\n    if (text.length!== 0) {\r\n      let newText = text.toLowerCase();\r\n      setText(newText);\r\n      props.showAlert(\"Text converted to lower case!\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleClearClick = (event) => {\r\n    if (text.length!== 0) {\r\n      setText(\"\");\r\n      props.showAlert(\"Text cleared!\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleCopy = (event) => {\r\n    if (text.length!== 0) {\r\n      let copiedText = document.getElementById(\"myBox\");\r\n      copiedText.select();\r\n      navigator.clipboard.writeText(copiedText.value);\r\n      props.showAlert(\"Text copied to clipboard!\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleRemoveSpaces = () => {\r\n    if (text.length!== 0) {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container my-3\">\r\n        <div className=\"mb-3\">\r\n          <h1>{props.heading}</h1>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            placeholder=\"Enter your text here...\"\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n\r\n        <button disabled={text.length===0} className=\"btn btn-success mx-2 my-1\" onClick={handleLowClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n\r\n        <button disabled={text.length===0}\r\n          style={{ position: \"absolute\", right: \"120px\" }}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear\r\n        </button>\r\n\r\n        <button disabled={text.length===0} className=\"btn btn-danger mx-2 my-1\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n\r\n        <button disabled={text.length===0} className=\"btn btn-warning mx-2 my-1\" onClick={handleRemoveSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container my-3\">\r\n        <h2>Text Summary</h2>\r\n        <pre>\r\n          Words : {text.length === 0 ? 0 : text.replaceAll(/\\s\\s+/g,\" \").trim().split(\" \").length} Characters :{\" \"}\r\n          {text.replaceAll(/\\s\\s+/g,\" \").trim().length}\r\n        </pre>\r\n        <p>{text.length === 0 ? 0 :0.008 * (text.replaceAll(/\\s\\s+/g,\" \").trim().split(\" \").length)} Minutes read</p>\r\n        <h3>Preview</h3>\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div style={{height:\"50px\"}}>\r\n    {props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show role=alert`}\r\n      >\r\n        <strong>\r\n          {props.alert.type.charAt(0).toUpperCase() + props.alert.type.slice(1)}\r\n        </strong>\r\n        : {props.alert.msg}\r\n      </div>\r\n    )}\r\n    </div>\r\n  );\r\n}\r\n","import Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  // style={{ \"text-align\": \"center\" }}\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, alertType) => {\n    setAlert({\n      msg: message,\n      type: alertType,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const [mode, setMode] = useState(\"light\");\n\n  const toggleState = (colour) => {\n    let color = colour;\n    console.log(color);\n\n    if (color === \"reset\") {\n      setMode(\"light\");\n      showAlert(\"Background Changed\", \"warning\");\n    } else {\n      if (color === \"green\") {\n        setMode(\"green\");\n        showAlert(\"Background Changed\", \"warning\");\n      } else if (color === \"blue\") {\n        setMode(\"blue\");\n        showAlert(\"Background Changed\", \"warning\");\n      } else if (color === \"yellow\") {\n        setMode(\"yellow\");\n        showAlert(\"Background Changed\", \"warning\");\n      } else {\n        if (mode === \"dark\") {\n          setMode(\"light\");\n          showAlert(\"Dark mode disabled\", \"success\");\n        } else {\n          setMode(\"dark\");\n          showAlert(\"Dark mode enabled\", \"warning\");\n        }\n      }\n    }\n  };\n\n  return (\n    <>\n      {/* <Navbar></Navbar>  when we will not pass any value tot he props, then default values will be rendered */}\n\n      {/* <Router> */}\n      <Navbar\n        title={\"TextMod\"}\n        toggleState={toggleState}\n        mode={mode}\n        showAlert={showAlert}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n        {/* <Route exact path=\"/\"> */}\n        <TextForm\n          heading={\"Enter your text below to analyze\"}\n          showAlert={showAlert}\n        />\n        {/* </Route> */}\n\n        {/* <Route exact path=\"/about\">\n              <About toggleState={toggleState} mode={mode} />\n            </Route> */}\n\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
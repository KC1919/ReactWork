{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","mode","document","body","style","backgroundColor","color","setBackgroundColor","event","target","innerText","toLowerCase","console","log","className","id","href","title","type","onClick","margin","cursor","toggleState","htmlFor","TextForm","useState","text","setText","heading","rows","value","placeholder","onChange","length","newText","toUpperCase","showAlert","position","right","copiedText","getElementById","select","navigator","clipboard","writeText","split","join","replaceAll","trim","Alert","alert","charAt","slice","msg","defaultProps","App","setAlert","message","alertType","setTimeout","setMode","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3af509c2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  if (props.mode === \"dark\") {\r\n    document.body.style.backgroundColor = \"black\";\r\n    document.body.style.color = \"white\";\r\n  } else {\r\n    document.body.style.backgroundColor = \"white\";\r\n    document.body.style.color = \"black\";\r\n  }\r\n\r\n  const setBackgroundColor = (event) => {\r\n    let color = event.target.innerText.toLowerCase();\r\n\r\n    console.log(color);\r\n\r\n    if (color === \"reset\") {\r\n      document.body.style.backgroundColor = \"white\";\r\n    }\r\n\r\n    document.body.style.backgroundColor = color;\r\n    document.body.style.color = \"black\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className={`navbar navbar-expand-lg navbar-dark bg-dark`}>\r\n        <div className=\"container-fluid\" id=\"homeAbout\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  About\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            <div>\r\n              <button\r\n                id=\"blue\"\r\n                type=\"button\"\r\n                onClick={setBackgroundColor}\r\n                className=\"btn btn-outline-primary mx-1\"\r\n              >\r\n                Blue\r\n              </button>\r\n              <button\r\n                id=\"yellow\"\r\n                type=\"button\"\r\n                className=\"btn btn-outline-warning mx-1\"\r\n                onClick={setBackgroundColor}\r\n              >\r\n                Yellow\r\n              </button>\r\n              <button\r\n                id=\"green\"\r\n                type=\"button\"\r\n                className=\"btn btn-outline-success mx-1\"\r\n                onClick={setBackgroundColor}\r\n              >\r\n                Green\r\n              </button>\r\n\r\n              <button\r\n                style={{margin:\"0 30px 0 50px\"}}\r\n                id=\"reset\"\r\n                type=\"button\"\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={setBackgroundColor}\r\n              >\r\n                Reset\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"form-check form-switch\">\r\n              <input\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleState}\r\n              />\r\n              <label\r\n                className=\"form-check-label text-light\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                {props.mode === \"dark\"\r\n                  ? \"Disable Dark Mode\"\r\n                  : \"Enable Dark Mode\"}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string.isRequired }; //setting the properties of the props\r\n\r\nNavbar.defaultProps = { title: \"Set Your title here\" }; //if no props will be passed, then it will use the degault values set here\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleUpClick = (event) => {\r\n    if (text.length !== 0) {\r\n      let newText = text.toUpperCase();\r\n      setText(newText);\r\n      props.showAlert(\"Text Converted to Upper Case!\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleLowClick = (event) => {\r\n    if (text.length!== 0) {\r\n      let newText = text.toLowerCase();\r\n      setText(newText);\r\n      props.showAlert(\"Text converted to lower case!\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleClearClick = (event) => {\r\n    if (text.length!== 0) {\r\n      setText(\"\");\r\n      props.showAlert(\"Text cleared!\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleCopy = (event) => {\r\n    if (text.length!== 0) {\r\n      let copiedText = document.getElementById(\"myBox\");\r\n      copiedText.select();\r\n      navigator.clipboard.writeText(copiedText.value);\r\n      props.showAlert(\"Text copied to clipboard!\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleRemoveSpaces = () => {\r\n    if (text.length!== 0) {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container my-3\">\r\n        <div className=\"mb-3\">\r\n          <h1>{props.heading}</h1>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            placeholder=\"Enter your text here...\"\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n\r\n        <button className=\"btn btn-success mx-2\" onClick={handleLowClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n\r\n        <button\r\n          style={{ position: \"absolute\", right: \"120px\" }}\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear\r\n        </button>\r\n\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n\r\n        <button className=\"btn btn-warning mx-2\" onClick={handleRemoveSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container my-3\">\r\n        <h2>Text Summary</h2>\r\n        <pre>\r\n          Words : {text.length === 0 ? 0 : text.replaceAll(/\\s\\s+/g,\" \").trim().split(\" \").length} Characters :{\" \"}\r\n          {text.replaceAll(/\\s\\s+/g,\" \").trim().length}\r\n        </pre>\r\n        <p>{0.008 * (text.replaceAll(/\\s\\s+/g,\" \").trim().split(\" \").length)} Minutes read</p>\r\n        <h3>Preview</h3>\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show role=alert`}\r\n      >\r\n        <strong>\r\n          {props.alert.type.charAt(0).toUpperCase() + props.alert.type.slice(1)}\r\n        </strong>\r\n        : {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  // style={{ \"text-align\": \"center\" }}\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, alertType) => {\n    setAlert({\n      msg: message,\n      type: alertType,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const [mode, setMode] = useState(\"light\");\n\n  const toggleState = () => {\n    // if(color)\n    // {\n    //   setBackgroundColor(color);\n    // }\n\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      showAlert(\"Dark mode enabled\", \"warning\");\n    } else {\n      setMode(\"light\");\n      showAlert(\"Dark mode disabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Navbar></Navbar>  when we will not pass any value tot he props, then default values will be rendered */}\n\n      {/* <Router> */}\n        <Navbar\n          title={\"TextMod\"}\n          toggleState={toggleState}\n          mode={mode}\n          showAlert={showAlert}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm\n                heading={\"Enter your text below to analyze\"}\n                showAlert={showAlert}\n              />\n            {/* </Route> */}\n\n            {/* <Route exact path=\"/about\">\n              <About toggleState={toggleState} mode={mode} />\n            </Route> */}\n\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}